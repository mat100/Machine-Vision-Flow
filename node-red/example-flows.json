[
    {
        "id": "example_edge_to_color",
        "type": "tab",
        "label": "Example: Edge → Color Detection",
        "disabled": false,
        "info": "Example flow showing edge detection followed by color analysis of each contour"
    },
    {
        "id": "inject1",
        "type": "inject",
        "z": "example_edge_to_color",
        "name": "Trigger Inspection",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [["camera1"]]
    },
    {
        "id": "camera1",
        "type": "mv-camera-capture",
        "z": "example_edge_to_color",
        "name": "Camera Capture",
        "cameraId": "test",
        "apiUrl": "http://localhost:8000",
        "autoConnect": false,
        "x": 340,
        "y": 100,
        "wires": [["edge1", "debug1"]]
    },
    {
        "id": "edge1",
        "type": "mv-edge-detect",
        "z": "example_edge_to_color",
        "name": "Edge Detection",
        "apiUrl": "http://localhost:8000",
        "method": "canny",
        "cannyLow": 50,
        "cannyHigh": 150,
        "minContourArea": 500,
        "maxContourArea": 100000,
        "maxContours": 5,
        "x": 540,
        "y": 100,
        "wires": [["color1", "debug2"]]
    },
    {
        "id": "color1",
        "type": "mv-color-detect",
        "z": "example_edge_to_color",
        "name": "Color Detection",
        "apiUrl": "http://localhost:8000",
        "expectedColor": "red",
        "minPercentage": 50,
        "method": "histogram",
        "x": 740,
        "y": 100,
        "wires": [["function1"]]
    },
    {
        "id": "function1",
        "type": "function",
        "z": "example_edge_to_color",
        "name": "Count Red Regions",
        "func": "// Get counter from flow context\nlet redCount = flow.get('redCount') || 0;\n\n// Increment if red detected\nif (msg.payload.properties.dominant_color === 'red') {\n    redCount++;\n    flow.set('redCount', redCount);\n}\n\n// Add count to message\nmsg.payload.red_total = redCount;\n\nreturn msg;",
        "outputs": 1,
        "x": 960,
        "y": 100,
        "wires": [["debug3"]]
    },
    {
        "id": "debug1",
        "type": "debug",
        "z": "example_edge_to_color",
        "name": "1. Captured Image",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "debug2",
        "type": "debug",
        "z": "example_edge_to_color",
        "name": "2. Each Contour",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 740,
        "y": 160,
        "wires": []
    },
    {
        "id": "debug3",
        "type": "debug",
        "z": "example_edge_to_color",
        "name": "3. Red Regions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1160,
        "y": 100,
        "wires": []
    },
    {
        "id": "comment1",
        "type": "comment",
        "z": "example_edge_to_color",
        "name": "Example: Edge Detection → Color Analysis on each Contour",
        "info": "This flow demonstrates:\n1. Camera captures full image\n2. Edge detection finds N contours, sends N messages\n3. Color detection automatically analyzes bounding_box from each contour\n4. Function counts red regions across all messages\n\nNote: Color Detect automatically uses msg.payload.bounding_box!",
        "x": 270,
        "y": 40,
        "wires": []
    }
]
